alertmanager:
  ingress:
    enabled: true
    annotations:
      traefik.ingress.kubernetes.io/router.entrypoints: websecure
      traefik.ingress.kubernetes.io/router.middlewares: allow-lan-only@file,traefik-forward-auth@kubernetescrd
    hosts:
      - {{ alertmanager_hostname }}
  config:
    global:
      resolve_timeout: 15m
      slack_api_url: {{ slack_url }}
    receivers:
      - name: slack
        slack_configs:
          - channel: '{{ slack_channel }}'
            send_resolved: false
            text: |-
{% raw %}
              {{ range .Alerts }}
                *Alert:* {{ .Annotations.summary }} - `{{ .Labels.severity }}`
                *Description:* {{ .Annotations.description }}
                *Details:*
                {{ range .Labels.SortedPairs }} â€¢ *{{ .Name }}:* `{{ .Value }}`
                {{ end }}
              {{ end }}
            title: '[{{ .Status | toUpper }}{{ if eq .Status "firing" }}:{{ .Alerts.Firing
              | len }}{{ end }}] Monitoring Event Notification'
{% endraw %}
    route:
      group_by:
        - job
      group_interval: 5m
      group_wait: 90s
      receiver: slack
      repeat_interval: 12h
      routes:
        - receiver: slack
  serviceMonitor:
    selfMonitor: false
coreDns:
  enabled: false
defaultRules:
  create: false
kubeApiServer:
  enabled: false
kubeControllerManager:
  enabled: false
kubeEtcd:
  enabled: false
kubeProxy:
  enabled: false
kubeScheduler:
  enabled: false
kubeStateMetrics:
  enabled: false
kubelet:
  enabled: false
nodeExporter:
  enabled: false
prometheus:
  ingress:
    enabled: true
    annotations:
      traefik.ingress.kubernetes.io/router.entrypoints: websecure
      traefik.ingress.kubernetes.io/router.middlewares: allow-lan-only@file,traefik-forward-auth@kubernetescrd
    hosts:
      - {{ prometheus_hostname }}
  serviceMonitor:
    selfMonitor: false
  prometheusSpec:
    ruleSelectorNilUsesHelmValues: false
    ruleSelector:
      matchLabels:
        prometheus: default
    serviceMonitorSelectorNilUsesHelmValues: false
    serviceMonitorSelector:
      matchLabels:
        prometheus: default
prometheusOperator:
  serviceMonitor:
    selfMonitor: false
grafana:
  enabled: false
