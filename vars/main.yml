---
# common vars
base_domain: example.com
keycloak_hostname: sso.{{ base_domain }}
keycloak_realm: master
mail_address: mail@example.com

# metallb
metallb_namespace: metallb
metallb_address_pool: 192.168.1.210-192.168.1.220

# local-path-provisioner
local_path_provisioner_namespace: local-path-provisioner
local_path_provisioner_version: v0.0.17
local_path_provisioner_data_paths:
  - name: nvme
    path: /mnt/disk04/data
    defaultClass: true
  - name: hdd
    path: /mnt/disk01/data
    defaultClass: false

# nfs-client-provisioner
nfs_client_provisioner_namespace: nfs-client-provisioner
nfs_server: nfs.srv.{{ base_domain }}
nfs_path: /volume1/k8s-backup

# traefik
traefik_namespace: traefik
traefik_dashboard_hostname: traefik.local.{{ base_domain }}
cf_api_email: "{{ mail_address }}"
cert_domain: "{{ base_domain }}"
cert_sans: "*.{{ base_domain }},*.local.{{ base_domain }},*.srv.{{ base_domain }},*.dev.{{ base_domain }}"
acme_email: "{{ mail_address }}"
additional_arguments:
  - --serverstransport.insecureskipverify
  - --providers.file.filename=/data/traefik-config.yaml
  - --entrypoints.web.http.redirections.entrypoint.to=:443
  - --entrypoints.web.http.redirections.entrypoint.permanent=true
  - --entrypoints.websecure.http.tls.certresolver=cloudflare
  - --entrypoints.websecure.http.tls.domains[0].main={{ cert_domain }}
  - --entrypoints.websecure.http.tls.domains[0].sans={{ cert_sans }}
  - --entrypoints.websecure.http.middlewares=headers-default@file
  - --certificatesresolvers.cloudflare.acme.dnschallenge.provider=cloudflare
  - --certificatesresolvers.cloudflare.acme.email={{ acme_email }}
  - --certificatesresolvers.cloudflare.acme.dnschallenge.resolvers=1.1.1.1
  - --certificatesresolvers.cloudflare.acme.storage=/certs/acme.json
additional_entrypoints: null
traefik_routers:
  - name: pihole
    entrypoints:
      - websecure
    rule: "Host(`pihole.local.{{ base_domain }}`)"
    middlewares:
      - addprefix-pihole@file
    service: pihole
traefik_middlewares:
  - name: headers-default
    spec: >-
      headers:
        sslRedirect: true
        browserXssFilter: true
        contentTypeNosniff: true
        forceSTSHeader: true
        stsIncludeSubdomains: true
        stsPreload: true
        stsSeconds: 15552000
        customFrameOptionsValue: SAMEORIGIN
  - name: addprefix-pihole
    spec: >-
      addPrefix:
        prefix: "/admin"
traefik_services:
  - name: pihole
    servers:
      - http://192.168.1.75:80

# kubernetes-dashboard
kubernetes_dashboard_namespace: kubernetes-dashboard
kubernetes_dashboard_hostname: dash.local.{{ base_domain }}

# minio-backup
minio_backup_namespace: minio-backup
minio_backup_hostname: minio-backup.local.{{ base_domain }}
accesskey: admin
buckets:
  - cluster-resources
  - k8up-backups
  - gitlab

# prometheus-operator
prometheus_operator_namespace: monitoring
alertmanager_hostname: alertmanager.local.{{ base_domain }}
grafana_hostname: grafana.local.{{ base_domain }}
prometheus_hostname: prometheus.local.{{ base_domain }}
cluster_monitoring_enabled: false
slack_channel: "#kubernetes"
grafana_sso_enabled: true
grafana_storageclass: nvme
grafana_sso_name: example.com SSO
grafana_sso_client_id: grafana
grafana_sso_idp_url: https://{{ keycloak_hostname }}/auth/realms/{{ keycloak_realm }}/protocol/openid-connect

# prometheus-pushgateway
prometheus_pushgateway_namespace: monitoring
prometheus_pushgateway_hostname: pushgateway.local.{{ base_domain }}

# kubedb
kubedb_namespace: kubedb

# k8up
k8up_namespace: k8up
k8up_keep_jobs: 3
cluster_resources_backup_schedule: "0 */12 * * *"
cluster_resources_backup_check_schedule: "30 3 * * *"
cluster_resources_backup_prune_schedule: "10 */12 * * *"
cluster_resources_backup_keep_daily: 2
cluster_resources_backup_keep_last: 10

# gitlab
gitlab_namespace: gitlab
gitlab_hostname: git.{{ base_domain }}
gitlab_minio_hostname: gitlab-minio.local.{{ base_domain }}
gitlab_registry_hostname: hub.{{ base_domain }}
gitlab_backup_enabled: true
gitlab_backup_schedule: "0 1 * * *"
gitlab_runner_enabled: true
gitlab_ssh_enabled: true
gitlab_sso_enabled: true
gitlab_sso_name: example.com SSO
gitlab_sso_assertion_consumer_service_url: "https://git.{{ base_domain }}/users/auth/saml/callback"
gitlab_sso_idp_url: "https://{{ keycloak_hostname }}/auth/realms/{{ keycloak_realm }}/protocol/saml/clients/git.{{ base_domain }}"
gitlab_sso_issuer: "{{ gitlab_hostname }}"
gitlab_mail_enabled: true
gitlab_mail_from: git@{{ base_domain }}
gitlab_mail_smtp: mail.google.com
gitlab_mail_smtp_port: 587

# argocd
argocd_namespace: argocd
argocd_hostname: argocd.{{ base_domain }}
argocd_extraArgs:
  - --insecure
argocd_repo_url: https://{{ gitlab_hostname }}/kubernetes/deployments.git
argocd_repo_username: gitlab+deploy-token-2
argocd_sso_enabled: true
argocd_sso_name: example.com SSO
argocd_sso_idp_url: https://{{ keycloak_hostname }}/auth/realms/{{ keycloak_realm }}
argocd_sso_client_id: argocd
